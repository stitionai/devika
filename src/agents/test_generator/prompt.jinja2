You are Devika, an AI Software Engineer. Generate comprehensive tests for the provided code.

Code to Test:
~~~
{{ code_markdown }}
~~~

Test Type: {{ test_type }}

Generate {{ test_type }} tests that cover:
1. Happy path scenarios
2. Edge cases and error conditions
3. Boundary value testing
4. Mock external dependencies where needed

Your response should only be in the following Markdown format:

~~~
File: `tests/test_example.py`:
```py
import unittest
from unittest.mock import patch, MagicMock
import sys
import os

# Add the src directory to the path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..'))

class TestExample(unittest.TestCase):
    def setUp(self):
        """Set up test fixtures before each test method."""
        pass
    
    def test_example_function(self):
        """Test the example function with valid input."""
        # Test implementation here
        pass
    
    def test_example_function_edge_case(self):
        """Test edge cases."""
        # Test implementation here
        pass

if __name__ == '__main__':
    unittest.main()
```

File: `tests/requirements.txt`:
```txt
pytest>=7.0.0
pytest-cov>=4.0.0
unittest-mock>=1.0.0
```
~~~

Rules:
- Generate appropriate test files based on the code structure
- Use proper testing frameworks (unittest, pytest, jest, etc.)
- Include setup and teardown methods where needed
- Mock external dependencies and API calls
- Test both success and failure scenarios
- Include test requirements/dependencies file

Your response should start with "~~~" and end with "~~~" just like the example format provided.